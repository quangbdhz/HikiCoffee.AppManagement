<UserControl x:Class="HikiCoffee.AppManager.MyUserControl.ControlBarUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HikiCoffee.AppManager.MyUserControl"
             mc:Ignorable="d" 
             
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             
             Name="controlBarUC"
             d:DesignHeight="30" d:DesignWidth="130">
    <UserControl.Resources>
        <Style x:Key="TransparentStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Red"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid Background="Transparent">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TransparentStyleSize" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#363940"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid Background="Transparent">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseLeftButtonDown">
            <i:InvokeCommandAction Command="{Binding MouseMoveWindowCommand}" CommandParameter="{Binding ElementName=controlBarUC}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseDoubleClick">
            <i:InvokeCommandAction Command="{Binding MouseDoubleWindowCommand}" CommandParameter="{Binding ElementName=controlBarUC}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Button Command="{Binding MinimizeWindowCommand}" CommandParameter="{Binding ElementName=controlBarUC}" Grid.Column="0" Margin="7 0" 
                ToolTip="Minimize" Padding="0" Background="Transparent" BorderThickness="0" Width="18" Height="18">
            <materialDesign:PackIcon Width="18" Height="18" Foreground="Black" Kind="WindowMinimize" />
        </Button>

        <Button Command="{Binding MaximizeWindowCommand}" CommandParameter="{Binding ElementName=controlBarUC}" Grid.Column="1" Margin="7 0" 
                ToolTip="Maxnime" Padding="0" Background="Transparent" BorderThickness="0" Width="18" Height="18">
            <materialDesign:PackIcon Width="18" Height="18" Foreground="Black" Kind="{Binding PackIconMaxnime}" />
        </Button>

        <Button Command="{Binding CloseWindowCommand}" CommandParameter="{Binding ElementName=controlBarUC}" Grid.Column="2" Margin="7 0" 
                Name="buttonClose" ToolTip="Close" Padding="0" Background="Transparent" BorderThickness="0" Width="18" Height="18">
            <materialDesign:PackIcon Width="18" Height="18" Foreground="{Binding ColorChangeButtonClose}" Kind="CloseThick">

            </materialDesign:PackIcon>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseMove">
                    <i:InvokeCommandAction Command="{Binding MouseMoveChangeBackgroundButtonCloseCommand}" CommandParameter="{Binding ElementName=buttonClose}"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="MouseLeave">
                    <i:InvokeCommandAction Command="{Binding MouseLeaveChangeBackgroundButtonCloseCommand}" CommandParameter="{Binding ElementName=buttonClose}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
    </Grid>
</UserControl>
